# Script purpose: Analysis of long read HIV-1 super infection data
# Description: Post-clustering cleaning/processing of nanopore data generated by half-genome approach (3prime and 5prime seperately)
# Authors: Alfred Ssekagiri, Dan Lule Bugembe, Nicholas Bbosa
# Date created: 27-09-2022
# Date modified: 29-09-2022

# NOTE: 
#   1. For now, the script takes as input, FASTA (.fasta) and TXT (.clstr) files from the CD-HIT program.
#   2. The clustering routine will be added here in the near future.
#   3. After optimizing the analysis procedure, we shall provide a commandline utility of this script. 

# DEPENDENCIES: 
#    -seqkit: conda install seqkit -c bioconda

# USAGE: 
#   For now, the script is run inside a directory/location of the outputs of CD-HIT (.fasta and .clstr) files
#   In addition, it requires a single FASTA file (refs.fasta, see step ) containing all the reference sequences.
#   We analyse 3prime data seperately from 5prime data, as such we recommend having two seperate directories
#   one for 3prime data and the other for 5prime data. Then add this script to both folders.
#   To run this script, simply navigate to directory with the data as specified above and type the following on your terminal.
#   sh superinfection.sh

# STEP 1: compute the size of clusters, measured as the number of sequences in each cluster 
for cf in $(ls *.clstr); do bn="${cf%%_*}"; \
echo "Counting number of clusters for sample" $bn;  awk '/^>Cluster/{if (count); \
print count; printf $0; printf "\t"; count=0; next}{count++} END {print count}' $cf \
| sed 's/ //g' | sed '/^$/d' > ${bn}_clstr_size.txt; done
echo "======== STEP 1 is DONE ==========="

# STEP 2: Replace sequence header names of the corresponding by cluster name and cluster size
for f in $(ls *_trim.fasta); do bn="${f%%_*}"; \
echo "Renaming sequences for sample" $bn; cf=${bn}_clstr_size.txt; \
awk '/^>/{getline<cf}1' cf=$cf $f > ${bn}_renamed_headers.fasta; done
echo "======== STEP 2 is DONE ==========="

# STEP 3: Identify clusters with at least 20 sequences
for f in $(ls *_clstr_size.txt); do bn="${f%%_*}"; \
echo "Identifying clusters with at least 20 sequences for sample" $bn;  \
awk -F"\t" '$2>20 {print}' $f | sed 's/>//g'> ${bn}_clstr_20.txt; done
echo "======== STEP 3 is DONE ==========="

# STEP 4: Extracting clusters with at least 20 sequences
for f in $(ls *_renamed_headers.fasta); do bn="${f%%_*}"; \
echo "Extracting clusters with at least 20 sequences for sample" $bn; \
seqkit grep -n -f ${bn}_clstr_20.txt $f | sed 's/\t/_/g' >  ${bn}_clstrs_20.fasta; done
echo "======== STEP 4 is DONE ==========="

# STEP 5: Append sample name to the sequence header lines
for f in $(ls *_clstrs_20.fasta); do bn="${f%%_*}"; \
echo "Adding sample name to sequences header lines for sample" $bn; \
awk '/>/{sub(">",">"bn"_")}1' bn=$bn $f > ${bn}_clstrs_20_final.fasta; done
echo "======== STEP 5 is DONE ==========="

# STEP 6: Remove intermediate files
echo "Removing intermediate files"
rm *.txt 
rm *renamed_headers.fasta
rm *clstrs_20.fasta
echo "======== STEP 6 is DONE ==========="

# STEP 7: Concatenate each final sequence with the reference sequences
for f in $(ls *_final.fasta); do bn="${f%%_*}"; \
echo "Concatenating reference sequences with sequences of sample "$bn; \
cat ${bn}_clstrs_20_final.fasta refs.fasta > ${bn}_sample_refs.fasta; done

# Perform multiple sequence alignment - In progress

# for f in $(ls *_sample_refs.fasta); do bn="${f%%_*}"; echo $bn; \
# mafft ${bn}_sample_refs.fasta > ${bn}_sample_refs_aln.fasta  ;done

echo "=======++++++ Looks like we are good so far +++++==========="
